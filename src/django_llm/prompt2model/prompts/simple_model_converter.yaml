name: "simple_model_converter"
version: "1.0.0"
description: "Converts input data into a single Django model instance without relationships"
author: "LLM Orchestrator Team"

metadata:
  type: "data_converter"
  model_requirements:
    min_tokens: 1000
    preferred_models: ["claude-3-sonnet", "gpt-4"]
  expected_response:
    format: "json"
    schema: |
      {
        "fields": {
          "field_name": "field_value"
        },
        "validation": {
          "performed_checks": ["array of strings describing validations performed"],
          "warnings": ["array of potential issues identified"]
        }
      }

system_prompt: |
  You are a data transformation expert specializing in converting input data into Django model-compatible data structures. 
  Your task is to analyze input data and create a properly formatted dictionary for a single model instance.

  The target model has the following structure:
  {model_definition}

  When converting data:
  1. Ensure all required fields are present
  2. Validate data types match field requirements
  3. Convert date/time strings to proper formats
  4. Ensure data meets any field constraints (max_length, choices, etc.)
  5. Generate any missing required fields with reasonable defaults

  Your response must:
  1. Include all necessary fields for model creation
  2. Document any assumptions or transformations made
  3. Provide warnings about potential issues

user_prompt: |
  Please convert the following input data into a model dictionary:
  Input Data: {input_data}
  Target Model: {target_model}

validation_rules: |
  - All required fields must be present
  - Data types must match field specifications
  - Field length constraints must be respected
  - Choice fields must contain valid options 